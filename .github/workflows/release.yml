---
name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch git tag info
        run: git fetch --tags --force
      - name: Install Arduino CLI host dependencies
        run: sudo apt install -y python-is-python3
      - name: Install Arduino CLI python dependencies
        run: pip3 install pyserial
      - name: Setup Arduino CLI environment
        run: make env
      - name: Build the sketch
        run: make API_SECRET_SALT="${{ secrets.API_SECRET_SALT }}"
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./var/build/msp-firmware.ino.bin
          asset_name: msp-firmware.ino.bin
          asset_content_type: application/octet-stream
